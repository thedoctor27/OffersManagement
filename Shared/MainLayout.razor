@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims;
@using Microsoft.AspNetCore.Identity;
@inject IAppUserService _appUserService

<PageTitle>OffersManagement</PageTitle>

<div class="page">
    @if (loadingUser)
    {
        <p class="text-center">
            Loading, plz wait ...
        </p>
    }
    else
    {
        <div class="sidebar">
            <NavMenu />
        </div>

        <main>
            <div class="top-row px-4 auth">
                <LoginDisplay />
            </div>

            <article class="content px-4">
                @Body
            </article>
        </main>
    }

</div>

@code {
    public bool loadingUser = true;
    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var userIdClaim = authState?.User?.Claims.Where(c => c.Type == ClaimTypes.NameIdentifier).FirstOrDefault();
            var userEmail = authState?.User?.Claims.Where(c => c.Type == "preferred_username").FirstOrDefault();
            var userName = authState?.User?.Claims.Where(c => c.Type == "name").FirstOrDefault();

            if (userIdClaim != null)
            {
                var user = await _appUserService.Get(userIdClaim.Value);
                if(user == null)
                {
                    string id= await _appUserService.Add(new AppUser
                        {
                            Id = userIdClaim.Value,
                            Name = userName.Value,
                            Email = userEmail.Value,
                        });

                }
            }
            loadingUser = false;
            StateHasChanged();
        }

    }
}